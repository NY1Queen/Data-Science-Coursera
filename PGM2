makeCacheMatrix <- function(x = matrix()) {  ## "x" is the non-inverted matrix
		m <- NULL  ##  this is the cached copy of the inverted matrix
	
	set <- function(y) {  ## replace the current cached non-inverse matrix with the one passed in (as "y")
		x <<- y
		m <<- NULL
	}
	
	get <- function() x  ## return cached non-inverted matrix
	setInverse <- function(inv) m <<- inv
	getInverse <- function() m
	list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}


cacheSolve <- function(x, ...) {
	m <- x$getInverse()
	if(!is.null(m)) {
		message("getting cached data")
		return(m)
	}
	data <- x$get()
	m <- solve(data, ...)
	x$setInverse(m)
	m
}

